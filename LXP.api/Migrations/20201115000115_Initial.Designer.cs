// <auto-generated />
using System;
using LXP.api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LXP.api.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    [Migration("20201115000115_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LXP.api.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("HiredDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskList")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3a461ea-e692-6f54-2f3e-f076a08dda14"),
                            FirstName = "XiaoPeng",
                            HiredDate = new DateTimeOffset(new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0)),
                            LastName = "Luo",
                            TaskList = "Fix bugs, CRUD a entity, Design module"
                        },
                        new
                        {
                            Id = new Guid("16781dae-0522-a9d3-ac94-66d6b76aa772"),
                            FirstName = "GuanXi",
                            HiredDate = new DateTimeOffset(new DateTime(2020, 11, 14, 18, 1, 15, 556, DateTimeKind.Unspecified).AddTicks(2339), new TimeSpan(0, -6, 0, 0, 0)),
                            LastName = "Chen",
                            TaskList = "Design module, Take Photo"
                        });
                });

            modelBuilder.Entity("LXP.api.Entities.EmployeeTask", b =>
                {
                    b.Property<string>("TaskName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("DeadLine")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("TaskName");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskName = "Fix bugs",
                            DeadLine = new DateTimeOffset(new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0)),
                            StartTime = new DateTimeOffset(new DateTime(2020, 11, 14, 18, 1, 15, 557, DateTimeKind.Unspecified).AddTicks(4491), new TimeSpan(0, -6, 0, 0, 0))
                        },
                        new
                        {
                            TaskName = "CRUS a entity",
                            DeadLine = new DateTimeOffset(new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0)),
                            StartTime = new DateTimeOffset(new DateTime(2020, 11, 14, 18, 1, 15, 557, DateTimeKind.Unspecified).AddTicks(5648), new TimeSpan(0, -6, 0, 0, 0))
                        },
                        new
                        {
                            TaskName = "Design module",
                            DeadLine = new DateTimeOffset(new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0)),
                            StartTime = new DateTimeOffset(new DateTime(2020, 11, 14, 18, 1, 15, 557, DateTimeKind.Unspecified).AddTicks(5727), new TimeSpan(0, -6, 0, 0, 0))
                        },
                        new
                        {
                            TaskName = "Take photo",
                            DeadLine = new DateTimeOffset(new DateTime(2028, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0)),
                            StartTime = new DateTimeOffset(new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -6, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("LXP.api.Entities.EmployeeTask", b =>
                {
                    b.HasOne("LXP.api.Entities.Employee", "Employee")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("LXP.api.Entities.Employee", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
